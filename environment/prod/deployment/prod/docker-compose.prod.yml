version: "3.8"

networks:
  traefik-proxy:
    external: true
  toby-prod:
    driver: bridge

volumes:
  toby-prod-pgsql-data:
    name: toby-prod-pgsql-data
  toby-prod-redis-data:
    name: toby-prod-redis-data
  duplicati-source:
    name: duplicati-source
    external: true

services:
  toby-prod-app:
    image: ghcr.io/blumilksoftware/toby:latest
    container_name: toby-prod-app
    pull_policy: always
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 512M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.toby-prod-app.rule=Host(`${TOBY_HOST_NAME:? variable TOBY_HOST_NAME not set}`)"
      - "traefik.http.routers.toby-prod-app.entrypoints=websecure"
      - "traefik.http.routers.toby-prod-app.tls=true"
      - "traefik.http.routers.toby-prod-app.tls.certresolver=lets-encrypt-resolver"
      - "traefik.http.routers.toby-prod-app.middlewares=response-gzip-compress@file"
    depends_on:
      toby-prod-database:
        condition: service_healthy
      toby-prod-redis:
        condition: service_healthy
    working_dir: /application
    volumes:
      - duplicati-source:/backup
      - ./.env:/application/.env:ro
    networks:
      - toby-prod
      - traefik-proxy
    restart: unless-stopped
    env_file:
      - .deployment

  toby-prod-database:
    image: postgres:15
    container_name: toby-prod-database
    environment:
      - PGPASSWORD=${DOCKER_TOBY_PROD_DB_ROOT_PASSWORD:? variable DOCKER_TOBY_PROD_DB_ROOT_PASSWORD not set}
      - POSTGRES_DB=${DOCKER_TOBY_PROD_DB_DATABASE:? variable DOCKER_TOBY_PROD_DB_DATABASE not set}
      - POSTGRES_USER=${DOCKER_TOBY_PROD_DB_USERNAME:? variable DOCKER_TOBY_PROD_DB_USERNAME not set}
      - POSTGRES_PASSWORD=${DOCKER_TOBY_PROD_DB_PASSWORD:? variable DOCKER_TOBY_PROD_DB_PASSWORD not set}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --dbname ${DOCKER_TOBY_PROD_DB_DATABASE} --username ${DOCKER_TOBY_PROD_DB_USERNAME}"]
      interval: 3s
      timeout: 3s
      retries: 5
    volumes:
      - toby-prod-pgsql-data:/var/lib/postgresql/data
    networks:
      - toby-prod
    restart: unless-stopped

  toby-prod-redis:
    image: redis:7.0-alpine3.16
    container_name: toby-prod-redis
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 3s
      timeout: 3s
      retries: 5
    volumes:
      - toby-prod-redis-data:/data
    networks:
      - toby-prod
    restart: unless-stopped
