name: Deploy to beta manually

concurrency:
  group: deploy-beta
  cancel-in-progress: true

on:
  workflow_dispatch:

jobs:

  deploy:
    environment: beta
    name: Deploy to beta
    runs-on: ubuntu-22.04
    env:
      DOCKER_REGISTRY: registry.blumilk.pl
      DOCKER_REGISTRY_USER_NAME: robot@blumilkbot-harbor
      DOCKER_REGISTRY_PROJECT_NAME: internal-public
      DOCKER_REGISTRY_REPO_NAME: toby
    steps:
      - name: set branch name
        run: echo "BRANCH_NAME=$GITHUB_REF_NAME" >> $GITHUB_ENV

      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ env.BRANCH_NAME }}

      - name: sync with main branch
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git merge --no-commit --no-ff origin/main

      - name: set deployment project version
        run: echo "DEPLOYMENT_PROJECT_VERSION=$(bash ./environment/prod/deployment/scripts/version.sh --long)" >> $GITHUB_ENV

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_REGISTRY_USER_NAME }}
          password: ${{ secrets.BLUMILKBOT_HARBOR_TOKEN }}

      - name: set docker image name
        run: echo "DOCKER_IMAGE_NAME=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_PROJECT_NAME }}/${{ env.DOCKER_REGISTRY_REPO_NAME }}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: type=raw,value=beta
          context: workflow

      - name: build and push image
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5.4.0
        with:
          context: .
          file: ./environment/prod/app/Dockerfile
          build-args: DEPLOYMENT_PROJECT_VERSION_ARG=${{ env.DEPLOYMENT_PROJECT_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          push: true
          cache-from: type=gha, ref=${{ env.DOCKER_IMAGE_NAME }}-beta-build-cache
          cache-to: type=gha, ref=${{ env.DOCKER_IMAGE_NAME }}-beta-build-cache, mode=max

      - name: copy files via ssh
        uses: appleboy/scp-action@917f8b81dfc1ccd331fef9e2d61bdc6c8be94634 # v0.1.7
        with:
          timeout: 10s
          command_timeout: 10m
          host: ${{ secrets.VPS_OVH_BF7EC892_HOST }}
          port: ${{ secrets.VPS_OVH_BF7EC892_PORT }}
          username: ${{ secrets.VPS_OVH_BF7EC892_USERNAME }}
          key: ${{ secrets.VPS_OVH_BF7EC892_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.VPS_OVH_BF7EC892_SSH_PRIVATE_KEY_PASSPHRASE }}
          source: "./environment/prod/deployment/beta/*,./environment/prod/deployment/scripts/*"
          target: ${{ secrets.TOBY_VPS_BETA_APP_PATH }}
          rm: true

      - name: run deployment script over ssh
        uses: appleboy/ssh-action@7eaf76671a0d7eec5d98ee897acda4f968735a17 # v1.2.0
        with:
          timeout: 10s
          command_timeout: 10m
          host: ${{ secrets.VPS_OVH_BF7EC892_HOST }}
          port: ${{ secrets.VPS_OVH_BF7EC892_PORT }}
          username: ${{ secrets.VPS_OVH_BF7EC892_USERNAME }}
          key: ${{ secrets.VPS_OVH_BF7EC892_SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.VPS_OVH_BF7EC892_SSH_PRIVATE_KEY_PASSPHRASE }}
          script_stop: true
          script: |
            cd ${{ secrets.TOBY_VPS_BETA_APP_PATH }}/environment/prod/deployment/beta
            make beta-deploy SOPS_AGE_KEY=${{ secrets.SOPS_AGE_BETA_SECRET_KEY }}
            docker images --filter dangling=true | grep "${{ env.DOCKER_IMAGE_NAME }}" | awk '{print $3}'| xargs --no-run-if-empty docker rmi
