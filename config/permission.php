<?php

declare(strict_types=1);

use Toby\Domain\Enums\Role;

return [
    "models" => [
        "permission" => Spatie\Permission\Models\Permission::class,
        "role" => Spatie\Permission\Models\Role::class,
    ],
    "table_names" => [
        "roles" => "roles",
        "permissions" => "permissions",
        "model_has_permissions" => "model_has_permissions",
        "model_has_roles" => "model_has_roles",
        "role_has_permissions" => "role_has_permissions",
    ],
    "column_names" => [
        "role_pivot_key" => null,
        "permission_pivot_key" => null,
        "model_morph_key" => "model_id",
        "team_foreign_key" => "team_id",
    ],
    "register_permission_check_method" => true,
    "teams" => false,
    "display_permission_in_exception" => false,
    "display_role_in_exception" => false,
    "enable_wildcard_permission" => false,
    "cache" => [
        "expiration_time" => \DateInterval::createFromDateString("24 hours"),
        "key" => "spatie.permission.cache",
        "store" => "default",
    ],
    "permissions" => [
        "manage permissions",
        "manage holidays",
        "manage users",
        "manage keys",
        "manage technologies",
        "manage resumes",
        "manage benefits",
        "manage vacation limits",
        "manage requests as administrative approver",
        "manage requests as technical approver",
        "create requests on behalf of employee",
        "list monthly usage",
        "list all requests",
        "skip request flow",
    ],
    "permission_roles" => [
        Role::Administrator->value => [
            "manage permissions",
            "manage holidays",
            "manage users",
            "manage keys",
            "manage technologies",
            "manage resumes",
            "manage benefits",
            "manage vacation limits",
            "manage requests as administrative approver",
            "manage requests as technical approver",
            "create requests on behalf of employee",
            "list monthly usage",
            "list all requests",
            "skip request flow",
        ],
        Role::AdministrativeApprover->value => [
            "manage permissions",
            "manage holidays",
            "manage users",
            "manage keys",
            "manage technologies",
            "manage resumes",
            "manage benefits",
            "manage vacation limits",
            "manage requests as administrative approver",
            "manage requests as technical approver",
            "create requests on behalf of employee",
            "list monthly usage",
            "list all requests",
            "skip request flow",
        ],
        Role::TechnicalApprover->value => [
            "manage technologies",
            "manage resumes",
            "manage requests as technical approver",
            "list all requests",
        ],
        Role::Employee->value => [],
    ],
];
